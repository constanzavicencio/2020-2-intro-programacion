# -*- coding: utf-8 -*-
"""Ejercicio10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DkcSw2D7igEjlwYddbcBeEjECVE8XoJ0
"""

#agenda: dict (nombre:fono)
agenda={"Andres":22234646,"Maria":98723456,"David":43335555}
#buscar: str dict -> int (o None si no esta)
#buscar nombre en agenda y devolver fono
#ej: buscar("c",agenda)->1
def buscar(nombre,agenda):
    assert type(agenda)==dict and type(nombre)==str
    if nombre in agenda:
        return agenda[nombre]
    else:
        return None
assert buscar("Andres",agenda)==22234646

#primero definimos la funcion agregar

#agregar: nombre fono -> dict
#dado ciertos nombre y fono, son agregados en conjunto a nuestra agenda
#ej: agregar("Tanza",957184016)->{"Andres":22234646, "Maria":98723456, "David":43335555, "Tanza":957184016}
def agregar(nombre,fono):
  #nos aseguramos que tanto nombre como fono son el tipo de valor que requerimos
  assert type(nombre)==str and type(fono)==int 
  #definimos el caso en que ya esté dicho nombre en la agenda, en cuyo caso no
  #se debe cambiar el teléfono sino que se debe "ignorar" el nuevo dato,
  #devolviendo la agenda
  if nombre in agenda:
    return agenda
  else: #en caso de que no haya ningun dato con ese nombre
    agenda[nombre]=fono #agregamos el nuevo dato a la agenda
    return agenda

#Tests
assert agregar("Andres",12345678)=={"Andres":22234646, "Maria":98723456, "David":43335555}
assert agregar("Tanza",957184016)=={"Andres":22234646, "Maria":98723456, "David":43335555, "Tanza":957184016}
#nuestra nueva agenda es una con los siguientes datos {"Andres": 22234646, "David": 43335555, "Maria": 98723456, "Tanza": 957184016}

#creamos la funcion borrar

#borrar: nombre -> dict
#borramos el dato (con nombre y fono) de nuestra agenda según un nombre dado
#ej: borrar("Tanza") -> {"Andres":22234646,"Maria":98723456,"David":43335555}
def borrar(nombre):
  #nos aseguramos de que nombre sea un string
  assert type(nombre)==str
  #si el nombre esta en nuestra agenda
  if nombre in agenda:
    del agenda[nombre] #borramos el dato
    return agenda #hacemos que se imprima la nueva agenda
  else: #no esta el nombre en la agenda
    return agenda #devuelve la agenda sin ningun dato nuevo o eliminado

#Tests
assert borrar("Tanza")=={"Andres":22234646,"Maria":98723456,"David":43335555}
#ahora nuestra agenda vuelve a la original
assert borrar("Joaquin")=={"Andres":22234646,"Maria":98723456,"David":43335555}

#creamos la funcion cambiar_numero

#cambiar: nombre fono -> dict
#nos entregan un nuevo fono para cierto nombre y reemplazamos el fono antiguo
#de dicho nombre con este nuevo
#ej: cambiar_numero("Andres",931240224) -> 
def cambiar_numero(nombre,fono):
  assert type(nombre)==str and type(fono)==int
  if nombre in agenda:
    agenda[nombre]=fono
    return agenda #hacemos que se imprima la agenda
  else: 
    return agenda

#Tests (se ponen todos los ordenes posibles de la agenda, ya que es un diccionario)
assert cambiar_numero("Andres",931240224)=={"Andres":931240224,"Maria":98723456,"David":43335555}
#ahora nuestra nueva agenda es {"Andres":22234646,"Maria":98723456,"David":43335555}
assert cambiar_numero("Patricio",954214833)=={"Andres":931240224,"Maria":98723456,"David":43335555}